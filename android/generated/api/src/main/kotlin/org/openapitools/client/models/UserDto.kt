/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.google.gson.annotations.SerializedName

/**
 * 
 *
 * @param id 
 * @param firstname 
 * @param lastname 
 * @param email 
 * @param gender 
 * @param activities 
 * @param media 
 * @param friends 
 * @param interests 
 * @param googleToken 
 * @param facebookToken 
 * @param appleToken 
 */


data class UserDto (

    @SerializedName("id")
    val id: java.math.BigDecimal,

    @SerializedName("firstname")
    val firstname: kotlin.String,

    @SerializedName("lastname")
    val lastname: kotlin.String,

    @SerializedName("email")
    val email: kotlin.String,

    @SerializedName("gender")
    val gender: UserDto.Gender,

    @SerializedName("activities")
    val activities: kotlin.collections.List<kotlin.String>,

    @SerializedName("media")
    val media: kotlin.collections.List<kotlin.String>,

    @SerializedName("friends")
    val friends: kotlin.collections.List<kotlin.String>,

    @SerializedName("interests")
    val interests: kotlin.collections.List<kotlin.String>,

    @SerializedName("google_token")
    val googleToken: kotlin.String? = null,

    @SerializedName("facebook_token")
    val facebookToken: kotlin.String? = null,

    @SerializedName("apple_token")
    val appleToken: kotlin.String? = null

) {

    /**
     * 
     *
     * Values: all,other,male,female,transgender,bigender
     */
    enum class Gender(val value: kotlin.String) {
        @SerializedName(value = "All") all("All"),
        @SerializedName(value = "Other") other("Other"),
        @SerializedName(value = "Male") male("Male"),
        @SerializedName(value = "Female") female("Female"),
        @SerializedName(value = "Transgender") transgender("Transgender"),
        @SerializedName(value = "Bigender") bigender("Bigender");
    }
}

