//
// AuthAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AuthAPI {

    /**

     - parameter appleToken: (body)  
     - returns: BaseUserDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func authenticateApple(appleToken: AppleToken) async throws -> BaseUserDto {
        return try await authenticateAppleWithRequestBuilder(appleToken: appleToken).execute().body
    }

    /**
     - POST /auth/apple
     - parameter appleToken: (body)  
     - returns: RequestBuilder<BaseUserDto> 
     */
    open class func authenticateAppleWithRequestBuilder(appleToken: AppleToken) -> RequestBuilder<BaseUserDto> {
        let localVariablePath = "/auth/apple"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: appleToken)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BaseUserDto>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter token: (body)  
     - returns: BaseUserDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func authenticateGoogle(token: Token) async throws -> BaseUserDto {
        return try await authenticateGoogleWithRequestBuilder(token: token).execute().body
    }

    /**
     - POST /auth/google
     - parameter token: (body)  
     - returns: RequestBuilder<BaseUserDto> 
     */
    open class func authenticateGoogleWithRequestBuilder(token: Token) -> RequestBuilder<BaseUserDto> {
        let localVariablePath = "/auth/google"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: token)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BaseUserDto>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter token: (body)  
     - returns: BaseUserDto
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func authenticateWithFacebookPo(token: Token) async throws -> BaseUserDto {
        return try await authenticateWithFacebookPoWithRequestBuilder(token: token).execute().body
    }

    /**
     - POST /auth/facebook
     - parameter token: (body)  
     - returns: RequestBuilder<BaseUserDto> 
     */
    open class func authenticateWithFacebookPoWithRequestBuilder(token: Token) -> RequestBuilder<BaseUserDto> {
        let localVariablePath = "/auth/facebook"
        let localVariableURLString = APIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: token)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BaseUserDto>.Type = APIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
