openapi: 3.0.0
paths:
  /echo:
    get:
      operationId: get-echo
      summary: ""
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: string
      tags:
        - echo
  /users:
    post:
      operationId: create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
      responses:
        "201":
          description: ""
      tags: &a1
        - users
    get:
      operationId: findAll
      parameters: []
      responses:
        "200":
          description: ""
      tags: *a1
  /users/{id}:
    get:
      operationId: findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags: *a1
    patch:
      operationId: update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
      responses:
        "200":
          description: ""
      tags: *a1
    delete:
      operationId: remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags: *a1
  /users/search:
    get:
      operationId: search
      parameters: []
      responses:
        "200":
          description: ""
      tags: *a1
  /auth/test/{id}:
    post:
      operationId: login-test-user
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "201":
          description: The user has been successfully authenticated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags: &a2
        - auth
  /auth/apple:
    post:
      operationId: auth-with-apple
      summary: ""
      tags: *a2
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppleApiBody"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "401":
          description: ""
  /auth/google:
    post:
      operationId: auth-with-google
      summary: ""
      tags: *a2
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiBodyWithToken"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "401":
          description: ""
  /auth/facebook:
    post:
      operationId: auth-with-facebook
      summary: ""
      tags: *a2
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiBodyWithToken"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        "401":
          description: ""
  /posts:
    post:
      operationId: create-post
      summary: ""
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePostDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDto"
      tags: &a3
        - posts
    get:
      operationId: get-posts
      summary: ""
      parameters: []
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PostDto"
      tags: *a3
  /posts/{id}:
    get:
      operationId: get-post
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDto"
      tags: *a3
    patch:
      operationId: update-post
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePostDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDto"
      tags: *a3
    delete:
      operationId: delete-post
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags: *a3
  /posts/{id}/like:
    post:
      operationId: like-post
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags: *a3
  /posts/{id}/dislike:
    post:
      operationId: dislike-post
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        "200":
          description: ""
      tags: *a3
  /posts/{id}/media:
    post:
      operationId: upload-post-media
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MediaDto"
      responses:
        default:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostDto"
      tags: *a3
  /media:
    post:
      operationId: upload
      parameters: []
      responses:
        "201":
          description: ""
  /media/files:
    post:
      operationId: uploadFiles
      parameters: []
      responses:
        "201":
          description: ""
  /comments:
    post:
      operationId: create-comment
      summary: ""
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCommentDto"
      responses:
        "201":
          description: ""
      tags: &a4
        - comments
    get:
      operationId: get-comments
      summary: ""
      parameters: []
      responses:
        "200":
          description: ""
      tags: *a4
  /comments/{id}:
    get:
      operationId: get-comment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags: *a4
    patch:
      operationId: update-comment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCommentDto"
      responses:
        "200":
          description: ""
      tags: *a4
    delete:
      operationId: delete-comment
      summary: ""
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
      tags: *a4
info:
  title: Orasul Meu
  description: Orasul Meu Swagger API
  version: "1.0"
  contact: {}
tags:
  - name: orasul_meu
    description: ""
servers: []
components:
  schemas:
    UserDto:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        socialProfilePictureUrl:
          type: string
      required:
        - id
        - email
        - firstName
        - lastName
    AppleApiBody:
      type: object
      properties:
        authorizationCode:
          type: string
      required:
        - authorizationCode
    ApiBodyWithToken:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    CreatePostDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
    CommentDto:
      type: object
      properties: {}
    Media:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - image
            - video
        url:
          type: string
        fileName:
          type: string
      required:
        - id
        - type
        - url
        - fileName
    PostDto:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        author:
          $ref: "#/components/schemas/UserDto"
        likes:
          type: integer
        dislikes:
          type: integer
        comments:
          $ref: "#/components/schemas/CommentDto"
        media:
          type: array
          items:
            $ref: "#/components/schemas/Media"
      required:
        - id
        - title
        - content
        - author
        - likes
        - dislikes
        - comments
        - media
    UpdatePostDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
    File:
      type: object
      properties:
        fieldname:
          type: string
        originalname:
          type: string
        encoding:
          type: string
        mimetype:
          type: string
        size:
          type: integer
        stream:
          type: string
          format: binary
        destination:
          type: string
        filename:
          type: string
        path:
          type: string
        buffer:
          type: string
          format: binary
      required:
        - fieldname
        - originalname
        - encoding
        - mimetype
        - size
        - stream
        - destination
        - filename
        - path
        - buffer
    MediaDto:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: "#/components/schemas/File"
      required:
        - files
    CreateCommentDto:
      type: object
      properties: {}
    UpdateCommentDto:
      type: object
      properties: {}
